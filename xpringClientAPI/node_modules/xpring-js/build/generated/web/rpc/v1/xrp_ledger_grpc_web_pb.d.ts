import * as grpcWeb from 'grpc-web';

import * as rpc_v1_account_info_pb from '../../rpc/v1/account_info_pb';
import * as rpc_v1_fee_pb from '../../rpc/v1/fee_pb';
import * as rpc_v1_submit_pb from '../../rpc/v1/submit_pb';
import * as rpc_v1_tx_pb from '../../rpc/v1/tx_pb';

export class XRPLedgerAPIServiceClient {
  constructor (hostname: string,
               credentials?: null | { [index: string]: string; },
               options?: null | { [index: string]: string; });

  getAccountInfo(
    request: rpc_v1_account_info_pb.GetAccountInfoRequest,
    metadata: grpcWeb.Metadata | undefined,
    callback: (err: grpcWeb.Error,
               response: rpc_v1_account_info_pb.GetAccountInfoResponse) => void
  ): grpcWeb.ClientReadableStream<rpc_v1_account_info_pb.GetAccountInfoResponse>;

  getFee(
    request: rpc_v1_fee_pb.GetFeeRequest,
    metadata: grpcWeb.Metadata | undefined,
    callback: (err: grpcWeb.Error,
               response: rpc_v1_fee_pb.GetFeeResponse) => void
  ): grpcWeb.ClientReadableStream<rpc_v1_fee_pb.GetFeeResponse>;

  submitTransaction(
    request: rpc_v1_submit_pb.SubmitTransactionRequest,
    metadata: grpcWeb.Metadata | undefined,
    callback: (err: grpcWeb.Error,
               response: rpc_v1_submit_pb.SubmitTransactionResponse) => void
  ): grpcWeb.ClientReadableStream<rpc_v1_submit_pb.SubmitTransactionResponse>;

  getTx(
    request: rpc_v1_tx_pb.GetTxRequest,
    metadata: grpcWeb.Metadata | undefined,
    callback: (err: grpcWeb.Error,
               response: rpc_v1_tx_pb.GetTxResponse) => void
  ): grpcWeb.ClientReadableStream<rpc_v1_tx_pb.GetTxResponse>;

}

export class XRPLedgerAPIServicePromiseClient {
  constructor (hostname: string,
               credentials?: null | { [index: string]: string; },
               options?: null | { [index: string]: string; });

  getAccountInfo(
    request: rpc_v1_account_info_pb.GetAccountInfoRequest,
    metadata?: grpcWeb.Metadata
  ): Promise<rpc_v1_account_info_pb.GetAccountInfoResponse>;

  getFee(
    request: rpc_v1_fee_pb.GetFeeRequest,
    metadata?: grpcWeb.Metadata
  ): Promise<rpc_v1_fee_pb.GetFeeResponse>;

  submitTransaction(
    request: rpc_v1_submit_pb.SubmitTransactionRequest,
    metadata?: grpcWeb.Metadata
  ): Promise<rpc_v1_submit_pb.SubmitTransactionResponse>;

  getTx(
    request: rpc_v1_tx_pb.GetTxRequest,
    metadata?: grpcWeb.Metadata
  ): Promise<rpc_v1_tx_pb.GetTxResponse>;

}

